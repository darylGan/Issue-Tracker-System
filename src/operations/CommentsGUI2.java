package operations;

import classes.Comment;
import classes.User;
import database.CommentQuery;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Daryl Gan
 */
public class CommentsGUI2 extends javax.swing.JFrame {
    

    protected static User currentUser ;
    protected static int selected_Issue_ID;


    /**
     * Creates new form CommentsGUI2
     */
    public CommentsGUI2(int issueID,User currentUser) {
        initComponents();
        selected_Issue_ID=issueID;
        this.currentUser=currentUser;
        this.setLocationRelativeTo(null);
        this.setTitle("Bugs Everywhere SDN BHD");
        display();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtComments = new javax.swing.JTable();
        jbAddComment = new javax.swing.JButton();
        jbBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Issue Tracker System - Comment Page");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4), "Comments", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 24))); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(600, 350));

        jtComments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Comment", "Author"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtComments.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtCommentsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtComments);

        jbAddComment.setText("<html>Add<br>Comment</html>");
        jbAddComment.setMargin(new java.awt.Insets(2, 10, 2, 10));
        jbAddComment.setMaximumSize(new java.awt.Dimension(65, 25));
        jbAddComment.setMinimumSize(new java.awt.Dimension(65, 25));
        jbAddComment.setPreferredSize(new java.awt.Dimension(65, 25));
        jbAddComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddCommentActionPerformed(evt);
            }
        });

        jbBack.setText("Back");
        jbBack.setMargin(new java.awt.Insets(2, 10, 2, 10));
        jbBack.setMaximumSize(new java.awt.Dimension(65, 25));
        jbBack.setMinimumSize(new java.awt.Dimension(65, 25));
        jbBack.setPreferredSize(new java.awt.Dimension(65, 25));
        jbBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbAddComment, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbBack, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbAddComment, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jbBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 690, 400));
        jPanel2.getAccessibleContext().setAccessibleName("Issue Tracker System - Issue Page");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    protected static boolean isNumber(String input) {
        try{
            Integer.parseInt(input);
            return true;
        }
        catch (NumberFormatException e){
            return false;
        }
    }
        
    private void jbAddCommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAddCommentActionPerformed
        AddCommentFrame addComment=new AddCommentFrame(selected_Issue_ID,currentUser);
        addComment.setVisible(true);
        this.dispose();
       
    }//GEN-LAST:event_jbAddCommentActionPerformed

    private void jbBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBackActionPerformed
        IssuePageGUI issuepage;
        try {
            issuepage = new IssuePageGUI(selected_Issue_ID,currentUser);
            issuepage.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(CommentsGUI2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CommentsGUI2.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
        
    }//GEN-LAST:event_jbBackActionPerformed

    private void jtCommentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCommentsMouseClicked
       Comment[] comments;
       int row = jtComments.getSelectedRow();
        try {
            comments = CommentQuery.getComments( selected_Issue_ID );
            Comment selectedComment=comments[row];
            CommentDetails comDetail = new CommentDetails(selectedComment,currentUser);
            comDetail.setVisible(true);
            this.dispose();
        } catch (Exception e) {
           JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jtCommentsMouseClicked
    
    public void display() {       
        Comment[] comments;
        try{
            comments = CommentQuery.getComments( selected_Issue_ID );
             DefaultTableModel dtm = (DefaultTableModel)jtComments.getModel();
                Object[] row=new Object[3];
                for(int i=0 ; i<comments.length; i++){
                    row[0]=i+1;
                    row[1]=comments[i].getDescription();
                    row[2]=comments[i].getCommentUser().getName();
                    dtm.addRow(row);
                }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CommentsGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CommentsGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CommentsGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CommentsGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CommentsGUI2 commt = new CommentsGUI2(selected_Issue_ID,currentUser);
                commt.setVisible(true);
                commt.display();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAddComment;
    private javax.swing.JButton jbBack;
    private javax.swing.JTable jtComments;
    // End of variables declaration//GEN-END:variables
}
